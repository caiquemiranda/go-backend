version: '3.8'

services:
  app01:
    build:
      context: ./app01
      dockerfile: Dockerfile
    ports:
      - "8001:8080"
    restart: unless-stopped
    container_name: go-backend-app01
    environment:
      - TZ=America/Sao_Paulo
    networks:
      - app-network

  app02:
    build:
      context: ./app02
      dockerfile: Dockerfile
    ports:
      - "8002:8080"
    restart: unless-stopped
    container_name: go-backend-app02
    environment:
      - TZ=America/Sao_Paulo
    networks:
      - app-network

  app03:
    build:
      context: ./app03
      dockerfile: Dockerfile
    ports:
      - "8003:8080"
    restart: unless-stopped
    container_name: go-backend-app03
    environment:
      - TZ=America/Sao_Paulo
    networks:
      - app-network

  app04:
    build:
      context: ./app04
      dockerfile: Dockerfile
    ports:
      - "8004:8080"
    restart: unless-stopped
    container_name: go-backend-app04
    environment:
      - TZ=America/Sao_Paulo
    networks:
      - app-network

  app05:
    build:
      context: ./app05
      dockerfile: Dockerfile
    ports:
      - "8005:8080"
    restart: unless-stopped
    container_name: go-backend-app05
    environment:
      - TZ=America/Sao_Paulo
    networks:
      - app-network

  app06:
    build:
      context: ./app06
      dockerfile: Dockerfile
    ports:
      - "8006:8080"
    restart: unless-stopped
    container_name: go-backend-app06
    environment:
      - TZ=America/Sao_Paulo
    networks:
      - app-network

  app07:
    build:
      context: ./app07
      dockerfile: Dockerfile
    ports:
      - "8007:8080"
    restart: unless-stopped
    container_name: go-backend-app07
    environment:
      - TZ=America/Sao_Paulo
    networks:
      - app-network

  app08:
    build:
      context: ./app08
      dockerfile: Dockerfile
    ports:
      - "8008:8080"
    restart: unless-stopped
    container_name: go-backend-app08
    environment:
      - TZ=America/Sao_Paulo
    networks:
      - app-network

  app09:
    build:
      context: ./app09
      dockerfile: Dockerfile
    ports:
      - "8009:8080"
    restart: unless-stopped
    container_name: go-backend-app09
    environment:
      - TZ=America/Sao_Paulo
    networks:
      - app-network

  app10:
    build:
      context: ./app10
      dockerfile: Dockerfile
    ports:
      - "8010:8080"
    restart: unless-stopped
    container_name: go-backend-app10
    environment:
      - TZ=America/Sao_Paulo
    networks:
      - app-network

  app11:
    build:
      context: ./app11
      dockerfile: Dockerfile
    ports:
      - "8011:8080"
    restart: unless-stopped
    container_name: go-backend-app11
    environment:
      - TZ=America/Sao_Paulo
    networks:
      - app-network

  app12:
    build:
      context: ./app12
      dockerfile: Dockerfile
    ports:
      - "8012:8080"
    restart: unless-stopped
    container_name: go-backend-app12
    environment:
      - TZ=America/Sao_Paulo
    volumes:
      - uploads-data:/app/uploads
    networks:
      - app-network

  app13:
    build:
      context: ./app13
      dockerfile: Dockerfile
    ports:
      - "8013:8080"
    restart: unless-stopped
    container_name: go-backend-app13
    environment:
      - TZ=America/Sao_Paulo
    networks:
      - app-network

  app14:
    build:
      context: ./app14
      dockerfile: Dockerfile
    ports:
      - "8014:8080"
    restart: unless-stopped
    container_name: go-backend-app14
    environment:
      - TZ=America/Sao_Paulo
      - SERVER_PORT=8080
      - API_VERSION=v1
    networks:
      - app-network

  app15:
    build:
      context: ./app15
      dockerfile: Dockerfile
    ports:
      - "8015:8080"
    restart: unless-stopped
    container_name: go-backend-app15
    environment:
      - TZ=America/Sao_Paulo
      - PORT=8080
      - JWT_SECRET=minha-chave-secreta-super-segura
      - JWT_EXPIRATION=24h
    networks:
      - app-network

volumes:
  uploads-data:
    driver: local

networks:
  app-network:
    driver: bridge 